apiVersion: v1
kind: PersistentVolume
metadata:
  # To provide volumes for multiple nodes, this section is
  # duplicated and each one has a unique name
  name: cardano-elasbit-relay-1
spec:
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce # Only allow one container to use this volume
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-storage-relay1
  # Set the path to the folder on the node that will be mounted for this volume
  local:
    path: /home/ubuntu/cardano/relay2/data
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
          - key: node_role
            operator: In
            values:
              - relay1
---

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage-relay1

apiVersion: v1
kind: PersistentVolume
metadata:
  # To provide volumes for multiple nodes, this section is
  # duplicated and each one has a unique name
  name: cardano-elasbit-relay-2
spec:
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce # Only allow one container to use this volume
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-storage-relay2
  # Set the path to the folder on the node that will be mounted for this volume
  local:
    path: /home/ubuntu/cardano/relay2/data
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
          - key: node_role
            operator: In
            values:
              - relay2
---

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage-relay2

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cardano-relay1-deployment
  labels:
    app: cardano-relay1-deployment
spec:
  serviceName: cardano-relay1
  # Control the number of relays here
  replicas: 1
  selector: 
    matchLabels:
      node_role: relay1
  template:
    metadata:
      labels:
        app: cardano-node-relay1
        cardano-node-type: relay1
    spec:
      containers:
        - name: cardano-relay1
          # Official IOHK/cardano-node image
          image: inputoutput/cardano-node
          # Expose both the cardano-node port and the /metrics endpoint port.
          ports:
            - containerPort: 12798
            - containerPort: 3001
          # Mount the data volume at /data
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /config
          args: ["run",
                "--config", "/config/testnet-config.json",
                "--topology", "/config/testnet-topology.json",
                "--database-path", "/data/db",
                "--socket-path", "/data/node.socket",
                "--port", "3001",
                "--host-addr", "0.0.0.0"]
      volumes:
        - name: config
          configMap:
            name: testnet-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        # This storageClassName is used on the previously defined volume that
        # provides storage on the host machine
        storageClassName: local-storage-relay1
        resources:
          requests:
            storage: 20Gi
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cardano-relay2-deployment
  labels:
    app: cardano-relay2-deployment
spec:
  serviceName: cardano-relay2
  replicas: 1
  selector:
    matchLabels:
      node_role: relay1
  template:
    metadata:
      labels:
        app: cardano-node-relay2
        cardano-node-type: relay2
    spec:
      containers:
        - name: cardano-relay2
          image: inputoutput/cardano-node
          # Expose both the cardano-node port and the /metrics endpoint port.
          ports:
            - containerPort: 12798
            - containerPort: 3001
          # Mount the data volume at /data
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /config
          args: ["run",
                "--config", "/config/testnet-config.json",
                "--topology", "/config/testnet-topology.json",
                "--database-path", "/data/db",
                "--socket-path", "/data/node.socket",
                "--port", "3001",
                "--host-addr", "0.0.0.0"]
      volumes:
        - name: config
          configMap:
            name: testnet-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        # This storageClassName is used on the previously defined volume that
        # provides storage on the host machine
        storageClassName: local-storage-relay2
        resources:
          requests:
            storage: 20Gi
